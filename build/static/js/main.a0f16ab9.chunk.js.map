{"version":3,"sources":["services/phoneRequest.js","App.js","index.js"],"names":["baseUrl","phoneService","getAll","axios","get","deleteItem","id","delete","update","url","data","put","create","post","Message","message","name","className","type","Person","onDeletePerson","map","person","number","onClick","Filter","props","value","onChange","PersonForm","onSubmit","valueName","onPersonChange","valuePhone","onPhoneChange","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","searchTerm","setSearchTerm","setMessage","useEffect","then","response","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","nameDup","find","window","confirm","personUrl","searchedPerson","changedPerson","setTimeout","catch","err","updatePerson","personObject","uuidv4","concat","personItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f16ab9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst deleteItem = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (url, data) => {\r\n  return axios.put(url , data)\r\n}\r\n\r\nconst create = (data) => {\r\n  return axios.post(baseUrl, data)\r\n}\r\n\r\nconst phoneService = { getAll, deleteItem, update, create } \r\n\r\nexport default phoneService","import { useState, useEffect } from 'react'\r\n\r\nimport phoneService from './services/phoneRequest'\r\nimport './index.css'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst Message = ({ message }) => {\r\n  if(message.name === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={message.type}>\r\n      {message.name}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Person = ({ data, onDeletePerson}) => {\r\n  return (\r\n    <div>\r\n      {data.map((person) => \r\n        <p key={person.id}>{person.name} - {person.number}\r\n          <button onClick={() => onDeletePerson(person)}>delete</button>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n        Filter shown: <input type='text' value={props.value} onChange={props.onChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <div> \r\n        Name: <input type='text' value={props.valueName} onChange={props.onPersonChange}/> \r\n      </div>\r\n      <div> \r\n        Phone: <input type='tel' value={props.valuePhone} onChange={props.onPhoneChange}/> \r\n      </div>\r\n      <div>\r\n        <button type='submit'>Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhone, setNewPhone ] = useState('')\r\n  const [ searchTerm, setSearchTerm ] = useState('')\r\n  const [ message, setMessage ] = useState({ name: null, type: ''})\r\n \r\n\r\n  useEffect(() => {\r\n    phoneService\r\n      .getAll()\r\n      .then((response) => {\r\n        setPersons(response.data)\r\n      })\r\n\r\n  }, [])\r\n  \r\n  const personsToShow = searchTerm === \"\"\r\n    ? persons\r\n    : persons.filter((person) => person.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\n  const handleFilterChange = (event) => {\r\n    setSearchTerm(event.target.value)\r\n  }\r\n\r\n  const handlePersonChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handlePhoneChange = (event) => {\r\n    setNewPhone(event.target.value)\r\n  }\r\n\r\n  const updatePerson = (data) => {\r\n    const personUrl = `api/persons/${data.id}`\r\n    const searchedPerson = persons.find((person) => person.id === data.id)\r\n    const changedPerson = { ...searchedPerson, number: newPhone }\r\n    phoneService\r\n      .update(personUrl, changedPerson)\r\n      .then((response) => {\r\n        setPersons(persons.map((person) => person.id !== data.id ? person : response.data))\r\n        setNewName('')\r\n        setNewPhone('')\r\n        setMessage({\r\n          name: `${response.data.name} was updated`, \r\n          type: 'success'\r\n        })\r\n        setTimeout(() => setMessage(null), 5000)\r\n      })\r\n      .catch((err) => {\r\n        setMessage({\r\n          name: `Information of ${changedPerson.name} has already deleted from server`,\r\n          type: 'error'\r\n        })\r\n        setPersons(persons.filter((person) => person.id !== data.id))\r\n      })\r\n  }\r\n\r\n  const handleAddPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const nameDup = persons.find((person) => person.name.toLowerCase() === newName.toLowerCase())\r\n\r\n    if(nameDup) {\r\n      if(window.confirm(`${nameDup.name} is already added to phonebook, replace the old number with a new one? `)) {\r\n        updatePerson(nameDup)\r\n      }  \r\n      return;\r\n    }\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newPhone,\r\n      id: uuidv4()\r\n    }\r\n\r\n    phoneService\r\n      .create(personObject)\r\n      .then((response) => {\r\n        setPersons(persons.concat(response.data))\r\n        setNewName('')\r\n        setNewPhone('')\r\n        setMessage({\r\n          name: `Added ${response.data.name}`,\r\n          type: 'success'\r\n        })\r\n        setTimeout(() => {\r\n          setMessage({\r\n            name: null,\r\n            type: ''\r\n          })\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const handleDeletePerson = (person) => {\r\n    if(window.confirm(`Delete ${person.name} ?`)) {\r\n      phoneService\r\n        .deleteItem(person.id)\r\n        .then(() => {\r\n          return phoneService.getAll();\r\n        })\r\n        .then((response) => {\r\n          setPersons(response.data)\r\n        })\r\n        .catch((err) => {\r\n          setMessage({\r\n            name: `Information of ${person.name} has already deleted from server`,\r\n            type: 'error'\r\n          })\r\n          setPersons(persons.filter((personItem) => personItem.id !== person.id))\r\n          setTimeout(() => {\r\n            setMessage({\r\n              name: null,\r\n              type: ''\r\n            })\r\n          }, 5000)\r\n          \r\n        })\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter value={searchTerm} onChange={handleFilterChange}/>\r\n      \r\n      <h2>Add new</h2>\r\n      <Message message={message} />\r\n      <PersonForm \r\n        onSubmit={handleAddPerson} \r\n        valueName={newName}\r\n        valuePhone={newPhone}\r\n        onPersonChange={handlePersonChange}\r\n        onPhoneChange={handlePhoneChange}\r\n      />\r\n      \r\n      <h2>Numbers</h2>\r\n      \r\n      <Person data={personsToShow} onDeletePerson={handleDeletePerson}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}